buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

// java version
sourceCompatibility = "1.8"
targetCompatibility = "1.8"

group= modGroup
archivesBaseName = modBaseName
version = modVersion

minecraft {
    replaceIn "ben_mkiv/rendertoolkit/renderToolkit.java"
    replace "@VERSION@", modVersion

    replaceIn "ben_mkiv/guitoolkit/guiToolkit.java"
    replace "@VERSION@", modVersion

    runDir = "run"
    version = "${minecraftVersion}-${forge_version}"
    mappings = mcp_version
}

runClient {
    jvmArgs '-Dfml.coreMods.load=li.cil.oc.common.launch.TransformerLoader'
}

runServer {
    jvmArgs '-Dfml.coreMods.load=li.cil.oc.common.launch.TransformerLoader'
}

repositories {
    maven {
        name = "opencomputers"
        url = "http://maven.cil.li/"
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
}

dependencies {
    provided  "li.cil.oc:OpenComputers:${opencomputers_version}"

    compile fileTree(include: ['*.jar'], dir: 'libs')
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.entityInfo, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.entityInfo
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    // handle access transformers (https://tutorials.darkhax.net/tutorials/access_transformers/)
    rename '(.+_at.cfg)', 'META-INF/$1'
}

jar {
    manifest {
        attributes([
                "Maven-Artifact":"${project.group}:${project.archivesBaseName}:${project.version}",
                'Timestamp': System.currentTimeMillis(),
                'FMLAT': 'rendertoolkit_at.cfg'
        ])
    }
}

task devJar(type: Jar) {
    from sourceSets.main.output
    from sourceSets.main.allJava
    classifier = 'dev'
}

artifacts {
    archives devJar
}


